class Solution {
    public Node sortedInsert(Node head, int data) {
        // code here
        Node newNode = new Node(data);

        if (head == null) {
            newNode.next = newNode;
            return newNode;
        }

        Node current = head;

        // Case 1: Insert at the beginning
        if (data < head.data) {
            while (current.next != head) {
                current = current.next;
            }
            current.next = newNode;
            newNode.next = head;
            return newNode;
        }

        // Case 2: Insert in the middle or at the end
        while (current.next != head && current.next.data < data) {
            current = current.next;
        }

        newNode.next = current.next;
        current.next = newNode;

        return head;
    }
}
